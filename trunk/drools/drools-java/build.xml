<?xml version="1.0" encoding="UTF-8"?>

<project default="jar" name="drools" basedir=".">
  
  <property name="defaulttargetdir" value="target"></property> 
  <property name="classesdir" value="target/classes"></property>
  <property name="sourcesdir" value="target/sources"></property>
  <property name="testclassesdir" value="target/test-classes"></property>
  <property name="examplesclassesdir" value="target/examples-classes"></property>
  <property name="testreportdir" value="target/test-reports"></property>
  
  <property name="resourcedir" value="src/java/main/"></property>
  
  <property name="distdir" value="dist"></property>
  <property name="javadocdir" value="target/docs/apidocs"></property>
  <property name="final.name" value="drools-2.0-beta-9"></property>
  
  <target name="init" 
          description="o Initializes some properties">
    <mkdir dir="lib"></mkdir>
    <condition property="noget">
      <equals arg2="only" arg1="${build.sysclasspath}"></equals>
    </condition>
  </target>

  <target name="compile" 
          description="o Compile the code" 
          depends="get-deps, antlr">
    
    <mkdir dir="${classesdir}"></mkdir>

    <javac destdir="${classesdir}" 
           deprecation="true" 
           debug="true" 
           optimize="false" 
           excludes="**/package.html">
      <src>
        <pathelement location="src/java/main"></pathelement>
        <pathelement location="target/sources/"></pathelement>
      </src>
      <classpath>
        <fileset dir="lib">
          <include name="*.jar"></include>
        </fileset>
      </classpath>
    </javac>
 
    <copy todir="${testclassesdir}">
      <fileset dir="src/java/test">
        <include name="**/*.drl"></include>
        <include name="**/*.jelly"></include>
      </fileset>
    </copy>

    <copy todir="${classesdir}">
      <fileset dir="src/java/main">
        <include name="**/*.xml"/>
      </fileset>
    </copy>

  </target>

  <target name="antlr">
    <mkdir dir="${sourcesdir}/org/drools/semantics/java/parser"></mkdir>

    <antlr target="src/java/main/org/drools/semantics/java/parser/java.g"
           dir="src/java/main/org/drools/semantics/java/parser"
           outputdirectory="${sourcesdir}/org/drools/semantics/java/parser">
      <classpath>
        <path location="lib/antlrall-2.7.1.jar"/>
      </classpath>
    </antlr>

    <antlr target="src/java/main/org/drools/semantics/java/parser/java.tree.g"
           dir="src/java/main/org/drools/semantics/java/parser"
           outputdirectory="${sourcesdir}/org/drools/semantics/java/parser">
      <classpath>
        <path location="lib/antlrall-2.7.1.jar"/>
      </classpath>
    </antlr>

  </target>
    
  <target name="jar" 
          description="o Create the jar" 
          depends="compile,test">
    <jar jarfile="target/${final.name}.jar" excludes="**/package.html" basedir="${classesdir}"></jar>
  </target>
  
  <target name="clean" 
          description="o Clean up the generated directories">
    <delete dir="${defaulttargetdir}"></delete>
    <delete dir="${distdir}"></delete>
  </target>

  <target name="dist" 
           description="o Create a distribution" 
          depends="jar, javadoc">
    <mkdir dir="dist"></mkdir>
    <copy todir="dist">
      <fileset dir="${defaulttargetdir}"></fileset>
    </copy>
  </target>
 
  <target name="test" 
          description="o Run the test cases" 
          if="test.failure" 
          depends="internal-test">
    <fail message="There were test failures."></fail>
  </target>

  <target name="internal-test" 
          unless="notest"
          depends="compile-tests">
    
      <mkdir dir="${testreportdir}"></mkdir>
      <junit dir="./" 
             failureproperty="test.failure" 
             printSummary="yes" 
             fork="true" 
             haltonerror="false">
        
        <sysproperty key="basedir" value="/home/bob/workspaces/drools"></sysproperty>
        <formatter type="xml"></formatter>
        <formatter usefile="true" type="plain"></formatter>
        <classpath>
          <fileset dir="lib">
            <include name="*.jar"></include>
          </fileset>
          <pathelement path="${testclassesdir}"></pathelement>
          <pathelement path="${classesdir}"></pathelement>
        </classpath>
        <batchtest todir="${testreportdir}">
          <fileset dir="src/java/test">
              <include name="**/*Test.java"/>
          </fileset>
        </batchtest>
      </junit>
    
  </target>

  <target name="compile-tests" 
          depends="compile">
      <mkdir dir="${testclassesdir}"></mkdir>
      <javac destdir="${testclassesdir}" deprecation="true" debug="true" optimize="false" excludes="**/package.html">
        <src>
          <pathelement location="src/java/test"></pathelement>
        </src>
        <classpath>
          <fileset dir="lib">
            <include name="*.jar"></include>
          </fileset>
          <pathelement path="${classesdir}"></pathelement>
        </classpath>
      </javac>
  </target>

  <target name="compile-examples"
          depends="jar">
      <mkdir dir="${examplesclassesdir}"></mkdir>
      <javac destdir="${examplesclassesdir}" deprecation="true" debug="true" optimize="false" excludes="**/package.html">
        <src>
          <pathelement location="src/java/examples"></pathelement>
        </src>
        <classpath>
          <path location="target/${final.name}.jar"/>
          <fileset dir="lib">
            <include name="*.jar"></include>
          </fileset>
        </classpath>
      </javac>
      <copy todir="${examplesclassesdir}">
        <fileset dir="src/java/examples">
          <include name="**/*.drl"/>
        </fileset>
      </copy>
  </target>

  <target name="example-escalation"
          depends="compile-examples">
      <echo>running escalation example</echo>
      <java classname="escalation.Escalation" fork="true"> 
        <classpath>
          <path location="target/${final.name}.jar"/>
          <path location="${examplesclassesdir}"/>
          <fileset dir="lib">
            <include name="*.jar"></include>
          </fileset>
        </classpath>
      </java>
  </target>

  <target name="example-sisters"
          depends="compile-examples">
      <echo>running sisters example</echo>
      <java classname="sisters.Sisters" fork="true"> 
        <classpath>
          <path location="target/${final.name}.jar"/>
          <path location="${examplesclassesdir}"/>
          <fileset dir="lib">
            <include name="*.jar"></include>
          </fileset>
        </classpath>
      </java>
  </target>

  <target name="example-fishmonger"
          depends="compile-examples">
      <echo>running fishmonger example</echo>
      <java classname="fishmonger.FishMonger" fork="true"> 
        <classpath>
          <path location="target/${final.name}.jar"/>
          <path location="${examplesclassesdir}"/>
          <fileset dir="lib">
            <include name="*.jar"></include>
          </fileset>
        </classpath>
      </java>
  </target>
  
  <target name="examples" depends="example-escalation,example-sisters,example-fishmonger"/>

  <target name="javadoc" 
          description="o Generate javadoc" depends="jar">
 
    <mkdir dir="${javadocdir}"></mkdir>
    
    <tstamp>
      <format pattern="2001-yyyy" property="year"></format>
    </tstamp>
 
    <property name="copyright" value="Copyright &amp;copy;  The Werken Company. All Rights Reserved."></property>
    <property name="title" value="${final.name} API"></property>
 
    <javadoc use="true" private="true" destdir="${javadocdir}" author="true" version="true" sourcepath="src/java/main" packagenames="org.drools.*">
      <classpath>
        <fileset dir="lib">
          <include name="*.jar"></include>
        </fileset>
        <pathelement location="target/${final.name}.jar"></pathelement>
      </classpath>
    </javadoc>
 
  </target>

  <target name="get-deps" 
          unless="noget" 
          depends="init">
    <get dest="lib/antlrall-2.7.1.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/antlr/jars/antlrall-2.7.1.jar"></get>
    <get dest="lib/bsh-1.2-b3.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/bsh/jars/bsh-1.2-b3.jar"></get>
    <get dest="lib/commons-beanutils-1.4-dev.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/commons-beanutils/jars/commons-beanutils-1.4-dev.jar"></get>
    <get dest="lib/commons-collections-2.0.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/commons-collections/jars/commons-collections-2.0.jar"></get>
    <get dest="lib/commons-jelly-1.0-beta-4.20021120.034859.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/commons-jelly/jars/commons-jelly-1.0-beta-4.20021120.034859.jar"></get>
    <get dest="lib/commons-jexl-1.0-beta-1.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/commons-jexl/jars/commons-jexl-1.0-beta-1.jar"></get>
    <get dest="lib/commons-logging-1.1-dev.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/commons-logging/jars/commons-logging-1.1-dev.jar"></get>
    <get dest="lib/dom4j-1.4-dev-7.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/dom4j/jars/dom4j-1.4-dev-7.jar"></get>
    <get dest="lib/junit-3.8.1.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/junit/jars/junit-3.8.1.jar"></get>
    <get dest="lib/jython-SNAPSHOT.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/jython/jars/jython-SNAPSHOT.jar"></get>
    <get dest="lib/xml-apis-2.0.2.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/xml-apis/jars/xml-apis-2.0.2.jar"></get>
    <get dest="lib/xerces-2.0.2.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/xerces/jars/xerces-2.0.2.jar"></get>
  </target>

</project>
    
