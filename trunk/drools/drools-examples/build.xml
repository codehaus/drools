<?xml version="1.0" encoding="UTF-8"?>

<!-- $Id: build.xml,v 1.39 2003-05-27 09:53:59 tdiesler Exp $ -->

<project default="jar" name="drools" basedir=".">

    <property name="basename" value="drools"/>
    <property name="version" value="2.0-beta-11-dev-2"/>

    <property name="jarname" value="${basename}-${version}"/>
    <property name="rarname" value="${basename}-jsr94-${version}"/>
    <property name="warname" value="${basename}"/>

    <property environment="env"/>

    <property name="defaulttargetdir" value="target"/>
    <property name="classesdir" value="target/classes"/>
    <property name="sourcesdir" value="target/sources"/>
    <property name="testclassesdir" value="target/test-classes"/>
    <property name="examplesclassesdir" value="target/examples-classes"/>
    <property name="testreportdir" value="target/test-reports"/>

    <property name="examplesdir" value="src/java/examples"/>
    <property name="resourcedir" value="src/java/main"/>
    <property name="testdir" value="src/java/test"/>
    <property name="webappdir" value="src/webapp"/>
    <property name="commonlibdir" value="common-lib"/>
    <property name="libdir" value="lib"/>
    <property name="etcdir" value="etc"/>

    <property name="distdir" value="dist"/>
    <property name="javadocdir" value="target/docs/apidocs"/>

    <!-- property name="noget" value="true"/ -->
    <!-- property name="notest" value="true"/ -->

    <target name="init"
        description="o Initializes some properties">
        <mkdir dir="${libdir}"/>
        <condition property="noget">
            <equals arg2="only" arg1="${build.sysclasspath}"></equals>
        </condition>
    </target>

    <target name="compile"
        description="o Compile the code"
        depends="get-deps, antlr">

        <mkdir dir="${classesdir}"/>

        <javac destdir="${classesdir}"
            deprecation="true"
            debug="true"
            optimize="false"
            excludes="**/package.html">
            <src>
                <pathelement location="src/java/main"/>
                <pathelement location="target/sources/"/>
            </src>
            <classpath>
                <fileset dir="${libdir}" includes="*.jar"/>
                <fileset dir="${commonlibdir}" includes="*.jar"/>
            </classpath>
        </javac>

        <copy todir="${classesdir}">
            <fileset dir="src/java/main">
                <include name="**/*.xml"/>
            </fileset>
        </copy>

    </target>

    <target name="antlr">
        <mkdir dir="${sourcesdir}/org/drools/semantics/java/parser"/>

        <antlr target="src/java/main/org/drools/semantics/java/parser/java.g"
            dir="src/java/main/org/drools/semantics/java/parser"
            outputdirectory="${sourcesdir}/org/drools/semantics/java/parser">
            <classpath>
                <path location="${libdir}/antlrall-2.7.1.jar"/>
            </classpath>
        </antlr>

        <antlr target="src/java/main/org/drools/semantics/java/parser/java.tree.g"
            dir="src/java/main/org/drools/semantics/java/parser"
            outputdirectory="${sourcesdir}/org/drools/semantics/java/parser">
            <classpath>
                <path location="${libdir}/antlrall-2.7.1.jar"/>
            </classpath>
        </antlr>

    </target>

    <target name="jar"
        description="o Create the jar"
        depends="compile,test">
        <jar jarfile="target/${jarname}.jar" excludes="**/package.html" basedir="${classesdir}"></jar>
    </target>

    <target name="clean"
        description="o Clean up the generated directories">
        <delete dir="${defaulttargetdir}"></delete>
        <delete dir="${distdir}"></delete>
    </target>

    <target name="dist"
        description="o Create a distribution"
        depends="jar, javadoc">
        <mkdir dir="dist"/>
        <copy todir="dist">
            <fileset dir="${defaulttargetdir}"></fileset>
        </copy>
    </target>

    <target name="test"
        description="o Run the test cases"
        if="test.failure"
        depends="internal-test,jsr94-test">
        <fail message="There were test failures."></fail>
    </target>

    <target name="internal-test"
        unless="notest"
        depends="compile-tests">

        <mkdir dir="${testreportdir}"/>
        <junit dir="./"
            failureproperty="test.failure"
            printSummary="yes"
            fork="true"
            haltonerror="false">

            <sysproperty key="basedir" value="${basedir}"/>
            <formatter type="xml"></formatter>
            <formatter usefile="true" type="plain"></formatter>
            <classpath>
                <fileset dir="${libdir}" includes="*.jar"/>
                <pathelement path="${testclassesdir}"/>
                <pathelement path="${classesdir}"/>
            </classpath>
            <batchtest todir="${testreportdir}">
                <fileset dir="src/java/test">
                    <include name="**/*Test.java"/>
                    <exclude name="org/drools/jsr94/**"/>
                </fileset>
            </batchtest>
        </junit>

    </target>

    <target name="jsr94-test"
        unless="notest"
        depends="compile-tests">

        <mkdir dir="${testreportdir}"/>

        <junit dir="./"
            failureproperty="test.failure"
            printSummary="yes"
            fork="true"
            haltonerror="false">

            <sysproperty key="basedir" value="${basedir}"/>
            <formatter type="xml"></formatter>
            <formatter usefile="true" type="plain"></formatter>
            <classpath>
                <fileset dir="${libdir}" includes="*.jar"/>
                <fileset dir="${commonlibdir}" includes="*.jar"/>
                <pathelement path="${testclassesdir}"/>
                <pathelement path="${classesdir}"/>
            </classpath>
            <batchtest todir="${testreportdir}">
                <fileset dir="src/java/test">
                    <include name="org/drools/jsr94/rules/*TestCase.java"/>
                    <include name="org/drools/jsr94/rules/admin/*TestCase.java"/>
                    <exclude name="org/drools/jsr94/rules/admin/RuleExecutionSetProviderTestCase.java"/>
                </fileset>
            </batchtest>
        </junit>

    </target>

    <target name="compile-tests"
        depends="compile">
        <mkdir dir="${testclassesdir}"/>

        <copy todir="${testclassesdir}">
            <fileset dir="src/java/test">
                <include name="**/*.drl"/>
                <include name="**/*.jelly"/>
            </fileset>
        </copy>

        <javac destdir="${testclassesdir}" deprecation="true" debug="true" optimize="false"
            excludes="**/JessBenchmarkTestCase.java">
            <src path="src/java/test"/>
            <classpath>
                <fileset dir="${commonlibdir}" includes="*.jar"/>
                <fileset dir="${libdir}" includes="*.jar"/>
                <pathelement path="${classesdir}"/>
            </classpath>
        </javac>
    </target>

    <target name="compile-examples"
        depends="jar">
        <mkdir dir="${examplesclassesdir}"/>
        <javac destdir="${examplesclassesdir}" deprecation="true" debug="true" optimize="false" excludes="**/package.html">
            <src path="src/java/examples"/>
            <classpath>
                <path location="target/${jarname}.jar"/>
                <fileset dir="${commonlibdir}" includes="*.jar"/>
                <fileset dir="${libdir}" includes="*.jar"/>
            </classpath>
        </javac>
        <copy todir="${examplesclassesdir}">
            <fileset dir="src/java/examples">
                <include name="**/*.drl"/>
            </fileset>
        </copy>
    </target>

    <target name="example-escalation"
        depends="compile-examples">
        <echo>running escalation example</echo>
        <java classname="escalation.Escalation" fork="true">
            <classpath>
                <path location="target/${jarname}.jar"/>
                <path location="${examplesclassesdir}"/>
                <fileset dir="${libdir}">
                    <include name="*.jar"/>
                </fileset>
            </classpath>
        </java>
    </target>

    <target name="example-sisters"
        depends="compile-examples">
        <echo>running sisters example</echo>
        <java classname="sisters.Sisters" fork="true">
            <classpath>
                <path location="target/${jarname}.jar"/>
                <path location="${examplesclassesdir}"/>
                <fileset dir="${commonlibdir}" includes="*.jar"/>
                <fileset dir="${libdir}" includes="*.jar"/>
            </classpath>
        </java>
    </target>

    <target name="example-fishmonger"
        depends="compile-examples">
        <echo>running fishmonger example</echo>
        <java classname="fishmonger.FishMonger" fork="true">
            <classpath>
                <path location="target/${jarname}.jar"/>
                <path location="${examplesclassesdir}"/>
                <fileset dir="${libdir}">
                    <include name="*.jar"/>
                </fileset>
            </classpath>
        </java>
    </target>

    <target name="examples" description="o build the examples"
        depends="example-escalation,example-sisters,example-fishmonger"/>

    <target name="javadoc"
        description="o Generate javadoc" depends="jar">

        <mkdir dir="${javadocdir}"/>

        <tstamp>
            <format pattern="2001-yyyy" property="year"></format>
        </tstamp>

        <property name="copyright" value="Copyright &amp;copy;  The Werken Company. All Rights Reserved."/>
        <property name="title" value="${jarname} API"/>

        <javadoc use="true" private="true" destdir="${javadocdir}" author="true" version="true" sourcepath="src/java/main" packagenames="org.drools.*">
            <classpath>
                <fileset dir="${commonlibdir}" includes="*.jar"/>
                <fileset dir="${libdir}" includes="*.jar"/>
                <pathelement location="target/${jarname}.jar"/>
            </classpath>
        </javadoc>

    </target>

    <target name="rar"
        unless="test.failure"
        depends="jar">

        <jar jarfile="${defaulttargetdir}/${rarname}.rar">
            <fileset dir="${defaulttargetdir}">
                <include name="${jarname}.jar"/>
            </fileset>
            <fileset dir="${libdir}">
                <include name="antlrall-*.jar"/>
                <include name="commons-*.jar"/>
                <include name="dom4j-*.jar"/>
                <include name="xerces-*.jar"/>
                <include name="xml-apis-*.jar"/>
            </fileset>
            <fileset dir="${commonlibdir}">
                <include name="jsr94-*.jar"/>
            </fileset>
            <metainf dir="${etcdir}" includes="ra.xml"/>
        </jar>

    </target>

    <target name="war-jboss"
        unless="test.failure"
        depends="jar, compile-examples">

        <war destfile="${defaulttargetdir}/${warname}-jboss.war" webxml="${webappdir}/web-inf/web.xml">

            <fileset dir="${webappdir}">
                <include name="*.*"/>
            </fileset>

            <fileset dir="${testdir}/org/drools/jsr94">
                <include name="sisters.drl"/>
            </fileset>

            <webinf dir="${webappdir}/web-inf">
                <include name="jboss-web.xml"/>
            </webinf>

            <classes dir="${examplesclassesdir}">
                <include name="**/Sisters.class"/>
                <include name="**/Person.class"/>
            </classes>

            <lib dir="${commonlibdir}">
                <include name="jsr94-*.jar"/>
            </lib>

        </war>

    </target>

    <target name="war-catalina"
        unless="test.failure"
        depends="jar, compile-examples">

        <war destfile="${defaulttargetdir}/${warname}-catalina.war" webxml="${webappdir}/web-inf/web.xml">
            <fileset dir="${webappdir}">
                <include name="*.*"/>
            </fileset>
            <fileset dir="${testdir}/org/drools/jsr94">
                <include name="sisters.drl"/>
            </fileset>
            <classes dir="${examplesclassesdir}">
                <include name="**/Sisters.class"/>
                <include name="**/Person.class"/>
            </classes>
            <lib dir="${defaulttargetdir}">
                <include name="${jarname}.jar"/>
            </lib>
            <lib dir="${commonlibdir}">
                <include name="jsr94-*.jar"/>
            </lib>
            <lib dir="${libdir}">
                <include name="antlrall-*.jar"/>
                <include name="bsh-*.jar"/>
                <include name="commons-beanutils-*.jar"/>
                <include name="commons-jelly-*.jar"/>
                <include name="commons-jexl-*.jar"/>
                <include name="dom4j-*.jar"/>
                <exclude name="commons-jelly-tags-junit*.jar"/>
            </lib>
        </war>
    </target>

    <target name="check-catalina" unless="env.CATALINA_HOME">
        <fail>
            Environment entry CATALINA_HOME is not set.
        </fail>
    </target>

    <target name="wrong-catalina" unless="catalina.present">
        <fail>
            Environment entry "CATALINA_HOME" is set but it does not seem
            to point to the right directory.
            The file "${env.CATALINA_HOME}/bin/catalina.bat" must be available.
        </fail>
    </target>

    <target name="check-jboss" unless="env.JBOSS_HOME">
        <fail>
            Environment entry JBOSS_HOME is not set. It must point to the directory which
            contains the following directories: "deploy", "conf", "tmp" etc.
        </fail>
    </target>

    <target name="wrong-jboss" unless="jboss.present">
        <fail>
            Environment entry "JBOSS_HOME" is set but it does not seem
            to point to the right directory.
            The file "${env.JBOSS_HOME}/bin/run.jar" must be available.
        </fail>
    </target>

    <target name="check-environment">
        <antcall target="check-jboss"/>
        <available property="jboss.present" file="${env.JBOSS_HOME}/bin/run.jar"/>
        <antcall target="wrong-jboss"/>
        <antcall target="check-catalina"/>
        <available property="catalina.present" file="${env.CATALINA_HOME}/bin/catalina.bat"/>
        <antcall target="wrong-catalina"/>
    </target>

    <target name="deploy-catalina" description="o Deploy test webapp to Catalina"
        depends="check-environment, war-catalina">

        <delete dir="${env.CATALINA_HOME}/webapps/${warname}"/>
        <copy file="${defaulttargetdir}/${warname}-catalina.war" tofile="${env.CATALINA_HOME}/webapps/${warname}.war"/>

        <echo/>
        <echo message="http://localhost:8080/drools"/>
    </target>

    <target name="deploy-jboss" description="o Deploy test webapp to JBoss"
        depends="check-environment, rar, war-jboss">

        <copy file="${etcdir}/drools-jsr94-ds.xml" todir="${defaulttargetdir}"/>

        <copy file="${defaulttargetdir}/${rarname}.rar" todir="${env.JBOSS_HOME}/server/default/deploy"/>
        <copy file="${defaulttargetdir}/drools-jsr94-ds.xml" todir="${env.JBOSS_HOME}/server/default/deploy"/>
        <copy file="${defaulttargetdir}/${warname}-jboss.war" tofile="${env.JBOSS_HOME}/server/default/deploy/${warname}.war"/>

        <echo/>
        <echo message="http://localhost:8080/drools"/>
    </target>

    <target name="get-deps"
        unless="noget"
        depends="init">
        <get dest="${libdir}/antlrall-2.7.1.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/antlr/jars/antlrall-2.7.1.jar"/>
        <get dest="${libdir}/bsh-1.2-b3.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/bsh/jars/bsh-1.2-b3.jar"/>
        <get dest="${libdir}/commons-beanutils-1.6.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/commons-beanutils/jars/commons-beanutils-1.6.jar"/>
        <get dest="${libdir}/commons-collections-2.1.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/commons-collections/jars/commons-collections-2.1.jar"/>
        <get dest="${libdir}/commons-jelly-1.0-beta-4-SNAPSHOT.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/commons-jelly/jars/commons-jelly-1.0-beta-4-SNAPSHOT.jar"/>
        <get dest="${libdir}/commons-jelly-tags-junit-SNAPSHOT.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/commons-jelly/jars/commons-jelly-tags-junit-SNAPSHOT.jar"/>
        <get dest="${libdir}/commons-jexl-1.0-beta-2.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/commons-jexl/jars/commons-jexl-1.0-beta-2.jar"/>
        <get dest="${libdir}/commons-logging-1.1-dev.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/commons-logging/jars/commons-logging-1.1-dev.jar"/>
        <get dest="${libdir}/dom4j-1.4.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/dom4j/jars/dom4j-1.4.jar"/>
        <get dest="${libdir}/junit-3.8.1.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/junit/jars/junit-3.8.1.jar"/>
        <get dest="${libdir}/jython-SNAPSHOT.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/jython/jars/jython-SNAPSHOT.jar"/>
        <get dest="${libdir}/xml-apis-2.0.2.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/xml-apis/jars/xml-apis-2.0.2.jar"/>
        <get dest="${libdir}/xerces-2.3.0.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/xerces/jars/xerces-2.3.0.jar"/>
    </target>

</project>

