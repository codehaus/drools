<?xml version="1.0" encoding="UTF-8"?>
<!--
/*
 * J A V A  C O M M U N I T Y  P R O C E S S
 *
 * J S R  9 4
 *
 * Test Compatability Kit
 *
 */
The definition of a RuleExecutionSet is not within the scope of the JSR 94. 
The implementation given in this file is written for the reference 
implementation. A rule engine vendor verifying their rule engine should 
modify this file to their specific needs.


This RuleExecutionSet will be invoked by the TCK in a stateful manner. 
This rule execution set will first be invoked with one set of parameters, 
process this input and keep the state of the execution. A subsequent 
invocation will add additional information to the rule execution set 
and the processing will involve both the newly provided information as 
well as the processed information of the previous execution.

The rule execution set must have support for the following business 
object model:
-	Customer Class.
The Customer business object is a simple business object that contains a 
name and credit limit property. The definition of this class can be found 
in org.jcp.jsr94.tck.model.Customer
-	Invoice Class.
The Invoice business object is a simple business object that contains a 
description, amount, and status property. The definition of this class 
can be found in org.jcp.jsr94.tck.model.Invoice

Instances of these interfaces are created using the TestFactory class.

The rule execution set has the following definition:
-	Support Invoice and Customer business object as input.
-	Defines 1 logical rule.
Rule1:
If the credit limit of the customer is greater than the amount of the 
invoice and the status of the invoice is unpaid then 
decrement the credit limit with the amount of the invoice and 
set the status of the invoice to "paid".

Note:
Additional physical rules may be defined to accomplish the 
requirements mentioned above.

The rule execution set has the following semantics:
The first input to the rule execution set is: 
-	A Customer with a credit limit of 5000.
-	An Invoice with an amount of 2000.

The rule execution should produce the following output:
-	The credit limit of the customer is 3000
-	The status of the invoice is paid.

The second input to the rule execution set is:
-	An Invoice with an amount of 1500.

The rule execution should produce the following output:
-	The credit limit of the customer is 1500
-	The status of the invoices is paid.

-->

<rule-set name="RuleExecutionSet2"
	  description="Stateful RuleExecutionSet for the TCK for Drools"
          xmlns="http://drools.org/rules"
          xmlns:java="http://drools.org/semantics/java">

    <rule name="Rule1" description="Rule #1">
        <parameter identifier="customer">
            <java:class>org.jcp.jsr94.tck.model.Customer</java:class>
        </parameter>
        <parameter identifier="invoice">
            <java:class>org.jcp.jsr94.tck.model.Invoice</java:class>
        </parameter>

        <java:condition><![CDATA[
            customer.getCreditLimit() > invoice.getAmount()
        ]]></java:condition>
        <java:condition><![CDATA[
            "unpaid".equals(invoice.getStatus())
        ]]></java:condition>

        <java:consequence>
            customer.setCreditLimit(customer.getCreditLimit() - invoice.getAmount());
            invoice.setStatus("paid");
	    System.out.println("The credit limit of the customer is " + customer.getCreditLimit());
	    System.out.println("The status of the invoice is " + invoice.getStatus());
        </java:consequence>
    </rule>
</rule-set>
