<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
    "-//Puppy Crawl//DTD Check Configuration 1.1//EN"
    "http://www.puppycrawl.com/dtds/configuration_1_1.dtd">

<!--

  Checkstyle configuration that checks the sun coding conventions from:

    - the Java Language Specification at
      http://java.sun.com/docs/books/jls/second_edition/html/index.html

    - the Sun Code Conventions at http://java.sun.com/docs/codeconv/

    - the Javadoc guidelines at
      http://java.sun.com/j2se/javadoc/writingdoccomments/index.html

    - the JDK Api documentation http://java.sun.com/j2se/docs/api/index.html

    - some best practices

  Checkstyle is very configurable. Be sure to read the documentation at
  http://checkstyle.sf.net (or in your downloaded distribution).

  Most Checks are configurable, be sure to consult the documentation.

  To completely disable a check, just comment it out or delete it from the file.

  Finally, it is worth reading the documentation.

-->

<module name="Checker">

    <!-- Checks that a package.html file exists for each package.     -->
    <!-- See http://checkstyle.sf.net/config_javadoc.html#PackageHtml -->
    <module name="PackageHtml"/>

    <!-- Checks whether files end with a new line.                        -->
    <!-- See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile -->
    <module name="NewlineAtEndOfFile"/>

    <!-- Checks that property files contain the same keys.         -->
    <!-- See http://checkstyle.sf.net/config_misc.html#Translation -->
    <module name="Translation"/>


    <module name="TreeWalker">

        <property name="cacheFile" value="${checkstyle.cache.file}"/>

        <!-- Checks for Javadoc comments.                     -->
        <!-- See http://checkstyle.sf.net/config_javadoc.html -->
        <module name="JavadocMethod"/>
        <module name="JavadocType"/>
        <module name="JavadocVariable"/>


        <!-- Checks for Naming Conventions.                  -->
        <!-- See http://checkstyle.sf.net/config_naming.html -->
        <module name="ConstantName"/>
        <module name="LocalFinalVariableName"/>
        <module name="LocalVariableName"/>
        <module name="MemberName"/>
        <module name="MethodName"/>
        <module name="PackageName"/>
        <module name="ParameterName"/>
        <module name="StaticVariableName">
            <property name="format" value="^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$"/>
        </module>
        <module name="TypeName"/>


        <!-- Checks for Headers                              -->
        <!-- See http://checkstyle.sf.net/config_header.html -->
        <module name="Header">
            <!-- The follow property value demonstrates the ability     -->
            <!-- to have access to ANT properties. In this case it uses -->
            <!-- the ${basedir} property to allow Checkstyle to be run  -->
            <!-- from any directory within a project.                   -->
            <property name="headerFile" value="${checkstyle.header.file}"/>
            <property name="ignoreLines" value="1,4,6"/>
        </module>

        <!-- Following interprets the header file as regular expressions. -->
        <!-- <module name="RegexpHeader"/>                                -->


        <!-- Checks for imports                              -->
        <!-- See http://checkstyle.sf.net/config_import.html -->
        <module name="AvoidStarImport"/>
        <module name="IllegalImport"/> <!-- defaults to sun.* packages -->
        <module name="RedundantImport"/>
        <module name="UnusedImports"/>


        <!-- Checks for Size Violations.                    -->
        <!-- See http://checkstyle.sf.net/config_sizes.html -->
        <module name="FileLength"/>
        <module name="LineLength">
            <property name="max" value="120"/>
        </module>
        <module name="MethodLength"/>
        <module name="ParameterNumber"> 
            <property name="max" value="7"/> 
        </module> 


        <!-- Checks for whitespace                               -->
        <!-- See http://checkstyle.sf.net/config_whitespace.html -->
        <module name="EmptyForIteratorPad">
            <property name="option" value="space"/>
        </module>
        <module name="NoWhitespaceAfter">
            <property name="tokens" value="ARRAY_INIT, BNOT, DEC, DOT, INC, UNARY_MINUS, UNARY_PLUS"/>
        </module>
        <module name="NoWhitespaceBefore">
            <property name="tokens" value="POST_DEC, POST_INC"/>
        </module>
        <module name="OperatorWrap"/>
        <module name="ParenPad">
            <property name="option" value="space"/>
	    <!-- <property name="severity" value="ignore"/> -->
        </module>
        <module name="TabCharacter"/>
        <module name="WhitespaceAfter">
            <!-- <property name="tokens" value="COMMA, SEMI"/> -->
        </module>
        <module name="WhitespaceAround"/>


        <!-- Modifier Checks                                    -->
        <!-- See http://checkstyle.sf.net/config_modifiers.html -->
        <module name="ModifierOrder"/>
        <module name="RedundantModifier"/>


        <!-- Checks for blocks. You know, those {}'s         -->
        <!-- See http://checkstyle.sf.net/config_blocks.html -->
        <module name="AvoidNestedBlocks"/>
        <module name="EmptyBlock"/>
        <module name="LeftCurly">
            <property name="option" value="nl"/>
        </module>
        <module name="NeedBraces"/>
        <module name="RightCurly">
            <property name="option" value="alone"/>
        </module>


        <!-- Checks for common coding problems               -->
        <!-- See http://checkstyle.sf.net/config_coding.html -->
        <module name="AvoidInlineConditionals"/>
        <module name="DoubleCheckedLocking"/>    <!-- MY FAVOURITE -->
        <module name="EmptyStatement"/>
        <module name="EqualsHashCode"/>
        <module name="HiddenField">
	    <property name="ignoreConstructorParameter" value="true"/>
	    <property name="ignoreSetter" value="true"/>
	    <property name="ignoreFormat" value="^id$"/>
        </module>
        <module name="IllegalInstantiation"> 
            <property name="classes" value="java.lang.Boolean,java.lang.String"/> 
        </module> 
        <module name="InnerAssignment"/>
        <module name="MagicNumber">
            <!-- <property name="ignoreNumbers" value="-1, 0, 1, 2, 7, 24, 10, 60, 100, 1000"/> -->
        </module>
        <module name="MissingSwitchDefault"/>
        <module name="RedundantThrows"/>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
	<!-- Broken in Checkstyle v3.4 but fixed in v3.5 (Checkstyle bug 952508)
	     Unfortunately, the latest maven-checkstyle plugin v2.5 uses Checkstyle v3.4!
        <module name="RequireThis"/>
	-->

        <!-- Checks for class design                         -->
        <!-- See http://checkstyle.sf.net/config_design.html -->
        <module name="DesignForExtension">
            <property name="severity" value="ignore"/>
        </module>
        <module name="FinalClass"/>
        <module name="HideUtilityClassConstructor"/>
        <module name="InterfaceIsType"/>
        <module name="VisibilityModifier"/>


        <!-- Miscellaneous other checks.                   -->
        <!-- See http://checkstyle.sf.net/config_misc.html -->
        <module name="ArrayTypeStyle"/>
        <!--
        <module name="FinalParameters"/>
        -->
        <module name="GenericIllegalRegexp"> 
            <property name="format" value="System\.out\.print|System\.err\.print|\.printStackTrace"/> 
        </module> 
        <module name="TodoComment"/>
        <module name="UpperEll"/>

	<!-- Programming Practice -->
        <module name="ReturnCount"/> 
        <module name="AbstractClassName"/> 
        <module name="NestedTryDepth"/> 
        <module name="NestedIfDepth"/> 
        <module name="IllegalCatch"/> 
        <module name="ThrowsCount"> 
	    <property name="max" value="2"/>
	</module>
        <module name="IllegalType"/> 
        <module name="IllegalToken"/> 
        <module name="ParameterAssignment"/> 
        <module name="PackageDeclaration"/> 
        <module name="MutableException"/> 
        <module name="BooleanExpressionComplexity"/> 
        <module name="CyclomaticComplexity"/> 
        <module name="NPathComplexity"/> 
        <module name="ExecutableStatementCount"/> 
        <module name="ClassFanOutComplexity"/> 
        <module name="ClassDataAbstractionCoupling"> 
            <property name="max" value="10"/> 
        </module> 

	<!--
	Looks like we will need Simon's own CheckStyle Check JAR to use these:
	http://www.redhillconsulting.com.au/blogs/simon/archives/000137.html
	<module name="au.com.redhillconsulting.jamaica.tools.checkstyle.FinalField"/>
        <module name="au.com.redhillconsulting.jamaica.tools.checkstyle.ReturnFromCatch"/> 
        <module name="au.com.redhillconsulting.jamaica.tools.checkstyle.ReturnFromFinally"/> 
	-->
	<!--
	I have no idea where this check is supposed to come from:
        <module name="IllegalThrows"/> 
	-->

    </module>

</module>

