<?xml version="1.0"?>

<test:suite xmlns:j="jelly:core" 
            xmlns:test="jelly:junit"
            xmlns="jelly:org.drools.tags.rule.RuleTagLibrary">

  <!-- 
    ||
    ||    <rule-set>
    ||
    -->

  <test:case name="testRuleSet_NoName">
    <j:catch var="e">
      <rule-set>
      </rule-set>
    </j:catch>
    <test:assert test="${e != null}">Should have thrown MissingArgumentException: name</test:assert> 
  </test:case>

  <test:case name="testRuleSet_Valid">
    <rule-set name="my rule-set">
    </rule-set>
    <test:assert test="${org.drools.ruleset != null}">No RuleSet created</test:assert>
  </test:case>

  <test:case name="testRuleSet_Var">
    <rule-set name="my rule-set" var="myruleset">
    </rule-set>
    <test:assert test="${org.drools.ruleset != null}">No RuleSet created</test:assert>
    <test:assert test="${myruleset != null}">RuleSet not stored in var</test:assert>
  </test:case>

  <!-- 
    ||
    ||    <rule>
    ||
    -->

  <test:case name="testRule_NoName">
    <j:catch var="e">
      <rule>
      </rule>
    </j:catch>
    <test:assert test="${e != null}">Should have thrown MissingArgumentException: name</test:assert> 
  </test:case>

  <test:case name="testRule_Valid">
    <rule name="my rule">
    </rule>
    <test:assert test="${org.drools.rule != null}">No Rule created</test:assert>
  </test:case>

  <test:case name="testRule_Var">
    <rule name="my rule" var="myrule">
    </rule>
    <test:assert test="${org.drools.rule != null}">No Rule created</test:assert>
    <test:assert test="${myrule != null}">Rule not stored in var</test:assert>
  </test:case>

  <!-- 
    ||
    ||    <semantics>
    ||
    -->

  <test:case name="testSemantics_NoModule">
    <j:catch var="e">
      <semantics/>
    </j:catch>
    <test:assert test="${e != null}">Should have thrown MissingArgumentException: name</test:assert> 
  </test:case>

  <test:case name="testSemantics_InvalidModule">
    <j:catch var="e">
      <semantics module="bork.bork.bork"/>
    </j:catch>
    <test:assert test="${e != null}">Should have thrown Exception</test:assert> 
  </test:case>

  <test:case name="testSemantics_Valid">
    <semantics module="org.drools.semantics.java"/>
  </test:case>

  <test:case name="testSemantics_Var">
    <semantics module="org.drools.semantics.java" var="javasemantics"/>
    <test:assert test="${javasemantics != null}">SemanticModule not stored in var</test:assert>
  </test:case>

  <!-- 
    ||
    ||    <declaration>
    ||
    -->

  <test:case name="testDeclaration_NoRule">
    <semantics module="org.drools.semantics.java"/>
    <declaration identifier="foo" xmlns:java="http://drools.org/semantics/java">
      <java:class type="java.lang.String"/> 
    </declaration>
    <test:assert test="${org.drools.declaration != null}">No Declaration created</test:assert>
  </test:case>

  <test:case name="testDeclaration_NoObjectType">
    <semantics module="org.drools.semantics.java"/>
    <j:catch var="e">
      <declaration xmlns:java="http://drools.org/semantics/java">
        <!--
          || missing object type
          -->
      </declaration>
    </j:catch>
    <test:assert test="${e != null}">Should have thrown JellyEXception: no object type</test:assert> 
  </test:case>

  <test:case name="testDeclaration_Var">
    <semantics module="org.drools.semantics.java"/>
    <declaration identifier="foo" var="mydecl" xmlns:java="http://drools.org/semantics/java">
      <java:class type="java.lang.String"/> 
    </declaration>
    <test:assert test="${org.drools.declaration != null}">No Declaration created</test:assert>
    <test:assert test="${mydecl != null}">Declaration not stored in var</test:assert>
  </test:case>

  <test:case name="testDeclaration_NoIdentifier">
    <semantics module="org.drools.semantics.java"/>
    <j:catch var="e">
      <rule name="test rule">
        <declaration xmlns:java="http://drools.org/semantics/java">
          <java:class type="java.lang.String"/> 
        </declaration>
      </rule>
    </j:catch>
    <test:assert test="${e != null}">Should have thrown MissingArgumentException: identifier</test:assert> 
  </test:case>

  <test:case name="testDeclaration_Rule">
    <semantics module="org.drools.semantics.java"/>
    <rule name="test rule" var="rule">
      <declaration identifier="foo" xmlns:java="http://drools.org/semantics/java">
        <java:class type="java.lang.String"/> 
      </declaration>
    </rule>
    <test:assert test="${rule.getDeclaration('foo') != null}">Declaration not added  to Rule</test:assert>
  </test:case>

  <!-- 
    ||
    ||    <parameter>
    ||
    -->

  <test:case name="testParameter_NoRule">
    <semantics module="org.drools.semantics.java"/>
    <j:catch var="e">
      <parameter identifier="foo" xmlns:java="http://drools.org/semantics/java">
        <java:class type="java.lang.String"/> 
      </parameter>
    </j:catch>
    <test:assert test="${e != null}">Should have thrown JellyException: No rule</test:assert> 
  </test:case>

  <test:case name="testParameter_Var">
    <semantics module="org.drools.semantics.java"/>
    <rule name="rule_testParameter_Var">
      <parameter identifier="foo" var="param_testParameter_Var" xmlns:java="http://drools.org/semantics/java">
        <java:class type="java.lang.String"/> 
      </parameter>
    </rule>
    <test:assert test="${org.drools.parameter != null}">No Declaration stored in default var</test:assert>
    <test:assert test="${param_testParameter_Var != null}">Declaration not stored in custom var </test:assert>
  </test:case>

  <test:case name="testParameter_NoIdentifier">
    <semantics module="org.drools.semantics.java"/>
    <j:catch var="e">
      <rule name="test rule">
        <parameter xmlns:java="http://drools.org/semantics/java">
          <java:class type="java.lang.String"/> 
        </parameter>
      </rule>
    </j:catch>
    <test:assert test="${e != null}">Should have thrown MissingArgumentException: identifier</test:assert> 
  </test:case>

  <test:case name="testParameter_Valid">
    <semantics module="org.drools.semantics.java"/>
    <rule name="test rule" var="rule">
      <parameter identifier="foo" xmlns:java="http://drools.org/semantics/java">
        <java:class type="java.lang.String"/> 
      </parameter>
    </rule>
    <test:assert test="${rule.getParameter('foo') != null}">Parameter not added  to Rule</test:assert>
  </test:case>

  <!-- 
    ||
    ||    <condition>
    ||
    -->
  <test:case name="testCondition_NoRule">
    <semantics module="org.drools.semantics.java"/>
    <j:catch var="e">
      <condition xmlns:java="http://drools.org/semantics/java">
        <java:condition>foo</java:condition>
      </condition>
    </j:catch>
    <test:assert test="${e != null}">Should have thrown JellyException: No rule</test:assert> 
  </test:case>

  <test:case name="testCondition_NoDecl">
    <semantics module="org.drools.semantics.java"/>
    <j:catch var="e">
      <rule name="rule_testCondition_NoDecl">
        <condition xmlns:java="http://drools.org/semantics/java">
          <java:condition>foo</java:condition>
        </condition>
      </rule>
    </j:catch>
    <test:assert test="${e != null}">Should have thrown ConfigurationException: No declaration</test:assert> 
  </test:case>
 
  <test:case name="testCondition_Valid">
    <semantics module="org.drools.semantics.java"/>
    <rule name="rule_testCondition_Valid" var="rule_testCondition_Valid" xmlns:java="http://drools.org/semantics/java">
      <declaration identifier="foo">
        <java:class type="java.lang.String"/> 
      </declaration>
      <condition var="cond_testCondition_Valid">
        <java:condition>foo</java:condition>
      </condition>
    </rule>
    <test:assert test="${org.drools.condition != null}">Condition didn't get stored in default var</test:assert>
    <test:assert test="${cond_testCondition_Valid != null}">Condition didn't get stored in custom var</test:assert>
    <test:assert test="${rule_testCondition_Valid.getConditions().contains(cond_testCondition_Valid)}">${cond_testCondition_Valid} not in ${rule_testCondition_Valid.getConditions()}</test:assert>
  </test:case>

  <!-- 
    ||
    ||    <extraction>
    ||
    -->

  <test:case name="testExtraction_NoRule">
    <semantics module="org.drools.semantics.java"/>
    <j:catch var="e">
      <extraction target="bar" xmlns:java="http://drools.org/semantics/java">
        <java:extractor>foo.getBar()</java:extractor>
      </extraction>
    </j:catch>
    <test:assert test="${e != null}">Should have thrown JellyException: No rule</test:assert> 
  </test:case>

  <test:case name="testExtraction_NoDecl">
    <semantics module="org.drools.semantics.java"/>
    <j:catch var="e">
      <rule name="my rule">
        <extraction target="bar" xmlns:java="http://drools.org/semantics/java">
          <java:extractor>foo</java:extractor>
        </extraction>
      </rule>
    </j:catch>
    <test:assert test="${e != null}">Should have thrown ConfigurationException: No declaration</test:assert> 
  </test:case>
 
  <test:case name="testExtraction_Valid">
    <semantics module="org.drools.semantics.java"/>
    <rule name="my rule" xmlns:java="http://drools.org/semantics/java">
      <declaration identifier="foo">
        <java:class type="java.lang.String"/> 
      </declaration>
      <declaration identifier="bar">
        <java:class type="java.lang.String"/> 
      </declaration>
      <extraction target="bar">
        <java:extractor>foo.getBar()</java:extractor>
      </extraction>
    </rule>
  </test:case>

  <test:case name="testExtraction_Valid">
    <semantics module="org.drools.semantics.java"/>
    <rule name="rule_testExtraction_Valid" var="rule_testExtraction_Valid" xmlns:java="http://drools.org/semantics/java">
      <declaration identifier="foo">
        <java:class type="java.lang.String"/> 
      </declaration>
      <declaration identifier="bar">
        <java:class type="java.lang.String"/> 
      </declaration>
      <extraction target="bar" var="extraction_testExtraction_Valid">
        <java:extractor>foo.getBar()</java:extractor>
      </extraction>
    </rule>
    <test:assert test="${org.drools.extraction != null}">Extraction didn't get stored in default var</test:assert>
    <test:assert test="${extraction_testExtraction_Valid != null}">Extraction didn't get stored in custom var</test:assert>
    <test:assert test="${rule_testExtraction_Valid.getExtractions().contains( extraction_testExtraction_Valid )}">Extraction didn't get stored in rule</test:assert>
  </test:case>

  <!-- 
    ||
    ||    <consequence>
    ||
    -->

  <test:case name="testConsequence_NoRule">
    <semantics module="org.drools.semantics.java"/>
    <j:catch var="e">
      <consequence xmlns:java="http://drools.org/semantics/java">
        <java:consequence>System.err.println("foo");</java:consequence>
      </consequence>
    </j:catch>
    <test:assert test="${e != null}">Should have thrown JellyException: No rule</test:assert> 
  </test:case>

  <test:case name="testConsequence_Valid">
    <semantics module="org.drools.semantics.java"/>
    <rule name="rule_testConsequence_Valid" var="rule_testConsequence_Valid">
      <consequence var="conseq_testConsequence_Valid" xmlns:java="http://drools.org/semantics/java">
        <java:consequence>System.err.println("foo");</java:consequence>
      </consequence>
    </rule>
    <test:assert test="${org.drools.consequence != null}">Extraction didn't get stored in default var</test:assert>
    <test:assert test="${consequence_testConsequence_Valid != null}">Extraction didn't get stored in custom var</test:assert>
    <test:assertEquals expected="${conseq_testConsequence_Valid}" actual="${rule_testConsequence_Valid.getConsequence()}">Consequence not stored in the Rule</test:assertEquals>
  </test:case>
</test:suite>
