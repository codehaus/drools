<?xml version="1.0"?>

<rule-set name="fibonacci"
          xmlns="http://drools.org/rules"
          xmlns:java="http://drools.org/semantics/java"
          xmlns:xs="http://www.w3.org/2001/XMLSchema-instance"
          xs:schemaLocation="http://drools.org/rules rules.xsd
                             http://drools.org/semantics/java java.xsd">

  <java:import>org.drools.examples.fibonacci.Fibonacci</java:import>

  <rule name="Bootstrap 1"   salience="20">
    <parameter identifier="f">
      <class>Fibonacci</class>
    </parameter>

    <declaration identifier="sequence">
      <class>java.lang.Integer</class>
    </declaration>

    <java:extractor target="sequence">new Integer(f.getSequence())</java:extractor>

    <declaration identifier="value" >
      <class>java.lang.Long</class>
    </declaration>

    <java:extractor target="value">new Long(f.getValue())</java:extractor>

    <java:condition>sequence.intValue() == 1</java:condition>
    <java:condition>value.longValue() == -1</java:condition>

    <java:consequence>
      f.setValue( 1 );
      System.err.println( f.getSequence() + " == " + f.getValue() );
      drools.modifyObject( f );
    </java:consequence>
  </rule>

  <rule name="Bootstrap 2">
    <parameter identifier="f">
      <class>Fibonacci</class>
    </parameter>

    <declaration identifier="sequence">
      <class>java.lang.Integer</class>
    </declaration>

    <java:extractor target="sequence">new Integer(f.getSequence())</java:extractor>

    <declaration identifier="value">
      <class>java.lang.Long</class>
    </declaration>

    <java:extractor target="value">new Long(f.getValue())</java:extractor>

    <java:condition>sequence.intValue() == 2</java:condition>
    <java:condition>value.longValue() == -1</java:condition>

    <java:consequence>
      f.setValue( 1 );
      System.err.println( f.getSequence() + " == " + f.getValue() );
      drools.modifyObject( f );
    </java:consequence>
  </rule>

  <rule name="Recurse" salience="10">
    <parameter identifier="f">
      <class>org.drools.examples.fibonacci.Fibonacci</class>
    </parameter>

    <declaration identifier="value">
      <class>java.lang.Long</class>
    </declaration>

    <java:extractor target="value">new Long(f.getValue())</java:extractor>

    <java:condition>value.longValue() == -1</java:condition>

    <java:consequence>
      System.err.println( "recurse for " + f.getSequence() );
      drools.assertObject( new Fibonacci( f.getSequence() - 1 ) );
    </java:consequence>
  </rule>

  <rule name="Calculate">
    <parameter identifier="f1">
      <class>Fibonacci</class>
    </parameter>
    <parameter identifier="f2">
      <class>Fibonacci</class>
    </parameter>
    <parameter identifier="f3">
      <class>Fibonacci</class>
    </parameter>

    <!-- <java:condition>f2.getSequence() == f1.getSequence() + 1</java:condition> -->
    <declaration identifier="sequence1">
      <class>java.lang.Integer</class>
    </declaration>
    <java:extractor target="sequence1">new Integer(f2.getSequence())</java:extractor>
    <java:extractor target="sequence1">new Integer(f1.getSequence() + 1)</java:extractor>

    <!-- <java:condition>f3.getSequence() == f2.getSequence() + 1</java:condition> -->
    <declaration identifier="sequence2">
      <class>java.lang.Integer</class>
    </declaration>
    <java:extractor target="sequence2">new Integer(f3.getSequence())</java:extractor>
    <java:extractor target="sequence2">new Integer(f2.getSequence() + 1)</java:extractor>

    <java:condition>f1.getValue() != -1</java:condition>
    <java:condition>f2.getValue() != -1</java:condition>
    <java:condition>f3.getValue() == -1</java:condition>

    <java:consequence>
      f3.setValue( f1.getValue() + f2.getValue() );

      System.err.println( f3.getSequence() + " == " + f3.getValue() );

      drools.modifyObject( f3 );
      drools.retractObject( f1 );
    </java:consequence>
  </rule>

</rule-set>

