<rule-set name="fibonacci"
          xmlns="http://drools.org/rules"
          xmlns:java="http://drools.org/semantics/java">

  <rule name="Bootstrap 1">
    <parameter identifier="a">
      <java:class>org.drools.examples.fibonacci.Fibonacci</java:class>
    </parameter>
    <java:condition>a.getSequence() == 1</java:condition>
    <java:condition>a.getValue() == -1</java:condition>
    <java:consequence>
      a.setValue( 1 );
      modifyObject( a );
      //retractObject( a );
      //assertObject( a );
    </java:consequence>
  </rule>

  <rule name="Bootstrap 2">
    <parameter identifier="b">
      <java:class>org.drools.examples.fibonacci.Fibonacci</java:class>
    </parameter>
    <java:condition>b.getSequence() == 2</java:condition>
    <java:condition>b.getValue() == -1</java:condition>
    <java:consequence>
      b.setValue( 1 );
      modifyObject( b );
      //retractObject( b );
      //assertObject( b );
    </java:consequence>
  </rule>

  <rule name="Recurse">
    <parameter identifier="c">
      <java:class>org.drools.examples.fibonacci.Fibonacci</java:class>
    </parameter>
    <java:condition>c.getValue() == -1</java:condition>
    <java:consequence>
      System.err.println( "recursing for: " + c.getSequence() );
      assertObject( new Fibonacci( c.getSequence() - 1 ) );
    </java:consequence>
  </rule>

  <rule name="Calculate">
    <parameter identifier="f1">
      <java:class>org.drools.examples.fibonacci.Fibonacci</java:class>
    </parameter>
    <parameter identifier="f2">
      <java:class>org.drools.examples.fibonacci.Fibonacci</java:class>
    </parameter>
    <parameter identifier="f3">
      <java:class>org.drools.examples.fibonacci.Fibonacci</java:class>
    </parameter>
    <java:condition>f2.getSequence() == (f1.getSequence() + 1)</java:condition>
    <java:condition>f3.getSequence() == (f2.getSequence() + 1)</java:condition>
    <java:condition>f1.getValue() != -1</java:condition>
    <java:condition>f2.getValue() != -1</java:condition>
    <java:condition>f3.getValue() == -1</java:condition>
    <java:consequence>
      System.err.println( "calc for " + f3.getSequence() );
      System.err.println( "::: " + (f1.getValue() + f2.getValue()) );
      f3.setValue( f1.getValue() + f2.getValue() );
      modifyObject( f3 );
      //retractObject( f3 );
      //assertObject( f3 );
    </java:consequence>
  </rule>

<!--
  <rule name="find sequence">
    <parameter identifier="f1">
      <java:class>org.drools.examples.fibonacci.Fibonacci</java:class>
    </parameter>
    <parameter identifier="f2">
      <java:class>org.drools.examples.fibonacci.Fibonacci</java:class>
    </parameter>
    <java:condition>f2.getSequence() == (f1.getSequence() + 1)</java:condition>
    <java:consequence>
       System.err.println( "\n\n%%%%%%%%%%% SEQUENCE : " + f1 + " " + f2 + "\n\n" );
    </java:consequence>
  </rule>
-->

</rule-set>
