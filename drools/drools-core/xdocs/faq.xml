<?xml version="1.0" encoding="ISO-8859-1"?>
<document url="http://drools.org/faq.xml">

  <properties>
    <title>FAQ</title>
    <author email="bob@eng.werken.com">bob mcwhirter</author>
  </properties>

  <body>
    <title>Frequently-Asked Questions</title>

    <section name="Frequenly-Asked Questions">
      <p>
      Here, we try to address the most frequently-asked questions.
      </p>
    
    <subsection name="What is drools?">
      <p>
      <b>drools</b> is a dynamic rules engine for Java, based upon the
      Rete/Rete-OO algorithm and supported by a pluggable semantics modules.
      </p>
    </subsection>

    <subsection name="What's Rete?">
      <p>
      Rete is an algorithm devised by Charlse Forgy in the early
      1980's to efficiently match conditions of rules when many
      objects are being observed by many rules.  It's basically
      a structure to allow progressive relational joins across
      tables.
      </p>
    </subsection>

    <subsection name="Relational joins?  I want objects!">
      <p>
      Yes, folks want objects, but Rete works in terms of
      tables and tuples.  Thus, we've modified the algorithm and
      named our adapatation <b>Rete-OO</b>, which is described
      in <a href="/pdf/drools-guide.pdf">The <code>drools</code> Guide</a>.
      </p>
    </subsection>

    <subsection name="What's a Semantic Module?">
      <p width="50%">
      Rules are written against objects, but the concept of
      an 'object' is fairly arbitrary, and completely customizable
      using <b>Semantic Modules</b>.  A Java Semantic Module may
      regard any XML document simply as an object of type
      <i>org.dom4j.Document</i>, while an XML Semantic Module
      may differentiate between documents based upon their
      root element's name and namespace-uri.  It's up to you.
      </p>
    </subsection>

    </section>

  </body>
</document>

