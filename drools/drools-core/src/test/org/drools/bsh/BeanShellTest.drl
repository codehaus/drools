
<rules xmlns="http://drools.org/rules">

    <semantics module="org.drools.semantics.java"/>

    <rule-set name="test rules"
        xmlns:java="http://drools.org/semantics/java">

        <rule name="testAssert">
            <parameter identifier="string">
                <java:class type="java.lang.String"/>
            </parameter>

            <condition>
                <java:condition>string.equals( "testAssert" )</java:condition>
            </condition>

            <consequence>
                <java:consequence>
                    List list = appData.get("rules.fired");
                    list.add("testAssert");
                    assertObject( new StringBuffer ("testModify") );
                </java:consequence>
            </consequence>
        </rule>

        <rule name="testModify">
            <parameter identifier="buffer">
                <java:class type="java.lang.StringBuffer"/>
            </parameter>

            <condition>
                <java:condition>buffer.toString().equals( "testModify" )</java:condition>
            </condition>

            <consequence>
                <java:consequence>
                    List list = appData.get("rules.fired");
                    list.add("testModify");
                    buffer.setLength(0);
                    buffer.append("testRetract");
                    modifyObject (buffer);
                </java:consequence>
            </consequence>
        </rule>

        <rule name="testRetract:1">
            <parameter identifier="buffer">
                <java:class type="java.lang.StringBuffer"/>
            </parameter>

            <condition>
                <java:condition>buffer.toString().equals( "testRetract" )</java:condition>
            </condition>

            <consequence>
                <java:consequence>
                    List list = appData.get("rules.fired");
                    list.add("testRetract");
                    retractObject (buffer);
                </java:consequence>
            </consequence>
        </rule>

        <rule name="testRetract:2">
            <parameter identifier="buffer">
                <java:class type="java.lang.StringBuffer"/>
            </parameter>

            <condition>
                <java:condition>buffer.toString().equals( "testRetract" )</java:condition>
            </condition>

            <consequence>
                <java:consequence>
                    throw new RuntimeException ("should not fire");
                </java:consequence>
            </consequence>
        </rule>

    </rule-set>

</rules>

