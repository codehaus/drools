<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           targetNamespace="http://drools.org/rules"
           elementFormDefault="qualified"
           xmlns:rules="http://drools.org/rules">

  <xs:element name="rule-set">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="imports" minOccurs="0" maxOccurs="1" >
          <xs:complexType>
            <xs:sequence>
              <xs:element ref="rules:abstractImport" maxOccurs="unbounded"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>

        <xs:element minOccurs="0" maxOccurs="unbounded" ref="rules:rule" />
      </xs:sequence>

      <xs:attribute name="name" use="required" type="xs:string"/>
      <xs:attribute name="description" type="xs:string"/>
    </xs:complexType>
  </xs:element>

  <xs:element name="rule">
    <xs:complexType>
      <xs:sequence>

        <xs:element name="parameter" maxOccurs="unbounded" >
          <xs:complexType>
            <xs:sequence>
              <xs:element ref="rules:abstractClass" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="identifier" use="required" type="xs:string"/>
          </xs:complexType>
        </xs:element>

        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:element name="declaration" minOccurs="0" maxOccurs="unbounded" >
              <xs:complexType>
                <xs:sequence>
                  <xs:element ref="rules:abstractClass"/>
                </xs:sequence>
                <xs:attribute name="identifier"     use="required" type="xs:string"/>
              </xs:complexType>
            </xs:element>
          <xs:element ref="rules:abstractExtractor" minOccurs="0" maxOccurs="unbounded" />
        </xs:choice>

         <xs:element ref="rules:abstractCondition"  maxOccurs="unbounded" />

        <xs:element name="duration" minOccurs="0" >
          <xs:complexType>
            <xs:attribute name="days"    type="xs:nonNegativeInteger"/>
            <xs:attribute name="hours"   type="xs:nonNegativeInteger"/>
            <xs:attribute name="minutes" type="xs:nonNegativeInteger"/>
            <xs:attribute name="seconds" type="xs:nonNegativeInteger"/>
          </xs:complexType>
        </xs:element>

      <xs:element ref="rules:abstractConsequence"/>

      </xs:sequence>
      <xs:attribute name="name" use="required" type="xs:string"/>
      <xs:attribute name="salience"            type="xs:integer"/>
      <xs:attribute name="no-loop"             type="xs:boolean"/>
      <xs:attribute name="description"         type="xs:string"/>
    </xs:complexType>

    <!-- All rules must have unique names -->
    <xs:key name="ruleName">
      <xs:selector xpath="rules:rule" />
      <xs:field xpath="@name" />
    </xs:key>

    <!-- make sure extractor targets are specified
         after decleration identifiers -->
    <xs:key name="identifierKey">
      <xs:selector xpath="rules:declaration | rules:parameter" />
      <xs:field xpath="@identifier" />
    </xs:key>

    <xs:keyref name="targetToIdentifier"
               refer="rules:identifierKey">
      <xs:selector xpath="rules:extractor" />
      <xs:field xpath="@target" />
    </xs:keyref>

  </xs:element>

  <!-- Abstract Definitions for sementic to create concrete implementations -->

  <!-- ensures that extractors always extend from te same type -->
  <xs:complexType name="extractorType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="target" type="xs:string" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:element name="abstractImport"      type="xs:string"           abstract="true"/>

  <xs:element name="abstractClass"       type="xs:string"           abstract="true"/>

  <xs:element name="abstractExtractor"   type="rules:extractorType" abstract="true" />

  <xs:element name="abstractCondition"   type="xs:string"           abstract="true"/>

  <xs:element name="abstractConsequence" type="xs:string"           abstract="true"/>

</xs:schema>
